name: 'main CI'

on:
  push:
    branches: [main]
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dlang: [dmd-latest, ldc-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Dlang
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dlang }}
      - name: Cache Dub packages
        uses: actions/cache@v3
        with:
          path: ~/.dub/packages
          key: dub-${{ runner.os }}-${{ matrix.dlang }}-${{ hashFiles('dub.json') }}
          restore-keys: dub-${{ runner.os }}-${{ matrix.dlang }}-
      - name: Build
        run: dub build --compiler=$DC
      - name: Lint
        run: dub lint --dscanner-config dscanner.ini
      - name: Test
        run: dub test --compiler=$DC
      - name: Build examples
        run: |
          for dir in examples/*; do
            (cd "$dir" && dub build --compiler=$DC)
          done

  build-windows:
    runs-on: windows-latest

    strategy:
      matrix:
        dlang: [dmd-latest, ldc-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Dlang
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dlang }}
      - name: Cache Dub packages
        uses: actions/cache@v3
        with:
          path: ${{ env.LOCALAPPDATA }}\dub\packages
          key: dub-${{ runner.os }}-${{ matrix.dlang }}-${{ hashFiles('dub.json') }}
          restore-keys: dub-${{ runner.os }}-${{ matrix.dlang }}-
      - name: Build
        run: dub build --compiler=$Env:DC
      - name: Lint
        run: dub lint --dscanner-config dscanner.ini
      - name: Test
        run: dub test --compiler=$Env:DC
      - name: Build examples
        shell: pwsh
        run: |
          Get-ChildItem examples -Directory | ForEach-Object {
            Push-Location $_.FullName
            dub build --compiler=$Env:DC
            Pop-Location
          }
